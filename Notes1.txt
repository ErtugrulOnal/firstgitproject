This is my first Github class
FIRST CODE PUSH
echo "# firstgitproject" >> README.md
git init --> create a git folder in our computer
git add .
git commit -m "first commit" --> we create a new version
git branch -M main --> creating  a main branch
git remote add origin https://github.com/ErtugrulOnal/firstgitproject.git (your project Link) --> connects local project repository (git) to remote repository (github)
git push -u origin main
===========
SECOND CODE PUSH
This is my second commit
git add .
git commit -m "updating code" --> we create a new version
git push

===========
GIT IGNORE
.gitignore should be created at the project level.
It is used ti ignore/hide the files
The files in .gitignore will not be added and committed and pushed
----------------------------------------
Example:
Create 3 files; Notes2.txt, Notes3.txt, Notes4.txt
And create .gitignore file in the project level
Then put Notes3.txt path in .gitignore file
Then commit
Then push
Then Notes3.txt should not be pushed in Github
NOTE: MAKE SURE TO SAVE AFTER EACH CHANGE control + s to save changes
===================================
GIT PULL
: Please, commit your changes before merging.
git add .
git commit -m "message"
git pull -> GOT ERROR Saying pull before push
git pull
git add .
git commit -m "message"
git push --> NO ERROR
NOTE: GIT PULL before GIT push
=====================
GIT CONFLICT:
Occurs when same class and line have different code
When we merge these codes then we conflict message
SOLUTION:
Manually fix and create a new commit and push the clean code

===================================
SIDE BRANCH BREATION AND MERGE WITH MASTER BRANCH
Create a clas "My seventh Commit"
Create a new commit and push
git add.
git commit -m "its my seventh commit but today 2nd"
git push
Then codes will be in remote ahmet branch
Pull request will be in remote ahmet branch
Then in git hub expert ur we will do
Pull Request (PR) (We or Expert)
Then Code Review (Expert)
Then Code Merge (Expert)